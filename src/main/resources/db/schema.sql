CREATE TABLE DT_USER (
    user_id INT PRIMARY KEY AUTO_INCREMENT,
    email VARCHAR(255) NOT NULL UNIQUE,
    password VARCHAR(255) NOT NULL,
    username VARCHAR(255) NOT NULL,
    created_by INT DEFAULT NULL,
    created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    maintain_by INT DEFAULT NULL,
    maintain_at DATETIME ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (created_by) REFERENCES DT_USER(user_id),
    FOREIGN KEY (maintain_by) REFERENCES DT_USER(user_id)
);


CREATE TABLE LT_GENERAL_STATUS (
    status_id INT PRIMARY KEY AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL UNIQUE,
    description VARCHAR(255) NOT NULL,
    active BOOLEAN NOT NULL DEFAULT TRUE,
    created_by INT NOT NULL,
    created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    maintain_by INT DEFAULT NULL,
    maintain_at DATETIME ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (created_by) REFERENCES DT_USER(user_id),
    FOREIGN KEY (maintain_by) REFERENCES DT_USER(user_id)
);


CREATE TABLE LT_SPORT (
    sport_id INT PRIMARY KEY AUTO_INCREMENT,
    name VARCHAR(255) NOT NULL,
    active BOOLEAN NOT NULL DEFAULT TRUE,
    created_by INT NOT NULL,
    created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    maintain_by INT DEFAULT NULL,
    maintain_at DATETIME ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (created_by) REFERENCES DT_USER(user_id),
    FOREIGN KEY (maintain_by) REFERENCES DT_USER(user_id)
);

CREATE TABLE DT_MATCH (
    match_id INT PRIMARY KEY AUTO_INCREMENT,
    sport_id INT NOT NULL,
    venue VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL,
    date DATE NOT NULL,
    time TIME NOT NULL,
    map VARCHAR(2000),
    remark VARCHAR(500) DEFAULT NULL,
    status_id INT,
    created_by INT NOT NULL,
    created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    maintain_by INT DEFAULT NULL,
    maintain_at DATETIME ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (sport_id) REFERENCES LT_SPORT(sport_id),
    FOREIGN KEY (status_id) REFERENCES LT_GENERAL_STATUS(status_id),
    FOREIGN KEY (created_by) REFERENCES DT_USER(user_id),
    FOREIGN KEY (maintain_by) REFERENCES DT_USER(user_id)
);
